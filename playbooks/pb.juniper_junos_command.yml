---
- name: Test junipernetworks.junos.junos_command module
  hosts: all
  gather_facts: false
  
  vars:
    ansible_connection: network_cli
    ansible_network_os: junos

  tasks:
    - name: TEST 1 - Execute single "show version" command.
      junipernetworks.junos.junos_command:
        commands: "show version"
      register: test1

    - name: Check TEST 1
      ansible.builtin.assert:
        that:
          - test1.stdout is defined
          - test1.stdout | length > 0

    - name: Creates directory
      ansible.builtin.file:
        path: out
        state: directory
        mode: '0755'
      delegate_to: localhost

    - name: TEST 2 - Execute three commands.
      junipernetworks.junos.junos_command:
        commands:
          - "show version"
          - "show system uptime"
          - "show interfaces terse"
      register: test2

    - name: Check TEST 2
      ansible.builtin.assert:
        that:
          - test2.stdout is defined
          - test2.stdout | length == 3

    - name: Print the command output of each.
      ansible.builtin.debug:
        var: item
      loop: "{{ test2.stdout }}"

    - name: TEST 3 - Two commands with XML output.
      junipernetworks.junos.junos_command:
        commands:
          - "show route"
          - "show version"
        display: xml
      register: test3

    - name: Check TEST 3
      ansible.builtin.assert:
        that:
          - test3.stdout is defined
          - test3.stdout | length == 2

    - name: TEST 4 - Multiple commands (JSON not directly supported, using text)
      junipernetworks.junos.junos_command:
        commands:
          - "show route"
          - "show version"
      register: test4

    - name: Check TEST 4
      ansible.builtin.assert:
        that:
          - test4.stdout is defined
          - test4.stdout | length == 2

    - name: TEST 5 - Save outputs to files
      ansible.builtin.copy:
        content: "{{ item.1 }}"
        dest: "./out/{{ inventory_hostname }}_command_{{ item.0 }}.txt"
      loop: "{{ test4.stdout | enumerate }}"
      delegate_to: localhost

    - name: TEST 6 - Single command with output save
      junipernetworks.junos.junos_command:
        commands: "show system uptime"
      register: test6

    - name: Save TEST 6 output
      ansible.builtin.copy:
        content: "{{ test6.stdout[0] }}"
        dest: "./out/{{ inventory_hostname }}.uptime.output"
      delegate_to: localhost

    - name: Check TEST 6
      ansible.builtin.assert:
        that:
          - test6.stdout is defined
          - test6.stdout | length == 1

    - name: TEST 7 - Multiple commands with combined output
      junipernetworks.junos.junos_command:
        commands:
          - "show route"
          - "show version"
      register: test7

    - name: Save TEST 7 combined output
      ansible.builtin.copy:
        content: |
          Command: show route
          {{ test7.stdout[0] }}
          
          Command: show version
          {{ test7.stdout[1] }}
        dest: "./out/{{ inventory_hostname }}.commands.output"
      delegate_to: localhost

    - name: Check TEST 7
      ansible.builtin.assert:
        that:
          - test7.stdout is defined
          - test7.stdout | length == 2

    - name: TEST 8 - Multiple commands with XML format
      junipernetworks.junos.junos_command:
        commands:
          - "show route"
          - "show version"
        display: xml
      register: test8

    - name: Save TEST 8 outputs without returning (save only)
      ansible.builtin.copy:
        content: "{{ item.1 }}"
        dest: "./out/{{ inventory_hostname }}_xml_{{ item.0 }}.xml"
      loop: "{{ test8.stdout | enumerate }}"
      delegate_to: localhost
      when: test8.stdout is defined

    - name: Check TEST 8
      ansible.builtin.assert:
        that:
          - test8.stdout is defined
          - test8.stdout | length == 2